@model Portal.Core.Database.Company

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<script src="~/Content/ckeditor/ckeditor.js"></script>
<script>
    $(document).ready(function () {
        // CKEditor
        CKEDITOR.replace('Description');
    })
</script>


@using (Html.BeginForm("Edit", "Company", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div>
            <h3 style="display: inline-block;">Cập nhật doanh nghiệp</h3>
            @if (User.IsInRole("Administrator"))
            {
                <p class="pull-right">
                    @Html.ActionLink("Quay lại danh mục", "Index", null, new { @class = "btn btn-sm btn-default" })
                </p>
            }
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <label class="control-label col-md-2" for="Photo">Ảnh đại diện</label>
            <div class="col-md-10">
                <img src="@(Model.Image != null ? Model.Image.FilePath + "/" + Model.Image.FileName : string.Empty)" />
                <input type="file" id="Photo" name="uploadFile" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Name">Tên doanh nghiệp</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Email">Email</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Address">Địa chỉ</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="AddressForMap">Địa chỉ(để hiển thị bản đồ)</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressForMap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressForMap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="City">Thành phố</label>
            <div class="col-md-10">
                @Html.DropDownList("City", ViewBag.City as List<SelectListItem>, "Vui lòng chọn", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="TradeId">Ngành nghề</label>
            <div class="col-md-10">
                @Html.DropDownList("TradeId", ViewBag.TradeId as List<SelectListItem>, "Vui lòng chọn", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TradeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Phone">Số điện thoại</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Director">Giám đốc</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Director, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Director, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Website">Website</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="CountView">Lượt xem</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CountView, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CountView, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Description">Mô tả chi tiết</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-primary" />
            </div>
        </div>
    </div>
}